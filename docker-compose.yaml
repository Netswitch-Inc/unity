services:
  frontend:
    build:
      context: frontend
      target: development
    ports:
      - "${FRONTEND_PORT}:${FRONTEND_PORT}"
    env_file:
      - frontend/.env
    stdin_open: true
    restart: always
    networks:
      - react-express
      - app-network
    depends_on:
      - backend

  backend:
    restart: always
    build:
      context: backend
      target: development
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    env_file:
      - backend/.env
    environment:
      - MONGO_URI=mongodb://${DATABASE_USER}:${DATABASE_PASSWORD}@mongodb:${DB_PORT}/${DATABASE_NAME}?authSource=${DATABASE_AUTH}
    depends_on:
      - mongo
    networks:
      - app-network
    expose:
      - 3000

  mongo:
    image: mongo:5.0
    container_name: mongodb
    ports:
      - "${MONGO_DB_PORT}:${MONGO_DB_PORT}"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${DATABASE_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${DATABASE_PASSWORD}
      MONGO_INITDB_DATABASE: ${DATABASE_NAME}
    volumes:
      - mongodb_data:/data/db # Persistent storage for MongoDB data
      - ./dump:/dump  # Mount the database dump
      - ./mongo-init/import.sh:/docker-entrypoint-initdb.d/import.sh  # Mount the import script
    entrypoint: ["/bin/bash", "/docker-entrypoint-initdb.d/import.sh"]
    networks:
      - app-network

volumes:
  mongodb_data:

networks:
  app-network:
    driver: bridge
    
  react-express:  # Ensure this network is defined if needed
    driver: bridge
